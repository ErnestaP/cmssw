webpackHotUpdate_N_E("pages/index",{

/***/ "./components/plots/plot/singlePlot/utils.ts":
/*!***************************************************!*\
  !*** ./components/plots/plot/singlePlot/utils.ts ***!
  \***************************************************/
/*! exports provided: removePlotFromSelectedPlots, addToSelectedPlots, addOverlayData, FormatParamsForAPI, addPlotToRightSide, removePlotFromRightSide, scroll, scrollToBottom, shrink_or_expand, get_plot_error */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removePlotFromSelectedPlots\", function() { return removePlotFromSelectedPlots; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addToSelectedPlots\", function() { return addToSelectedPlots; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addOverlayData\", function() { return addOverlayData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormatParamsForAPI\", function() { return FormatParamsForAPI; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addPlotToRightSide\", function() { return addPlotToRightSide; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removePlotFromRightSide\", function() { return removePlotFromRightSide; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"scroll\", function() { return scroll; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"scrollToBottom\", function() { return scrollToBottom; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"shrink_or_expand\", function() { return shrink_or_expand; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"get_plot_error\", function() { return get_plot_error; });\n/* harmony import */ var _Users_ernestapetraityte_projects_CERN_dqmgui_frontend_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/toConsumableArray */ \"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var clean_deep__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clean-deep */ \"./node_modules/clean-deep/src/index.js\");\n/* harmony import */ var clean_deep__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(clean_deep__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _viewDetailsMenu_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../viewDetailsMenu/utils */ \"./components/viewDetailsMenu/utils.ts\");\n/* harmony import */ var _containers_display_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../containers/display/utils */ \"./containers/display/utils.ts\");\n/* harmony import */ var _config_config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../config/config */ \"./config/config.ts\");\n\n\n\n\n\nvar removePlotFromSelectedPlots = function removePlotFromSelectedPlots(plotsQuery, plot_to_delete) {\n  var separatedPlots = plotsQuery ? plotsQuery.split('&') : [];\n  var fileterdPlotsAndDirs = separatedPlots.map(function (separatedPlot) {\n    var name_of_plot = encodeURI(plot_to_delete.name);\n    var plot = [plot_to_delete.run_number + plot_to_delete.dataset_name, plot_to_delete.path, name_of_plot].join('/');\n\n    if (plot !== separatedPlot) {\n      return separatedPlot;\n    }\n  });\n  var cleanedFileterdPlotsAndDirs = clean_deep__WEBPACK_IMPORTED_MODULE_1___default()(fileterdPlotsAndDirs);\n  var plotsForQuery = cleanedFileterdPlotsAndDirs.join('&');\n  return plotsForQuery;\n};\nvar addToSelectedPlots = function addToSelectedPlots(plotsQuery, plot) {\n  var _plot$dataset_name;\n\n  var run_number = plot.run_number;\n  var dataset_name = (_plot$dataset_name = plot.dataset_name) === null || _plot$dataset_name === void 0 ? void 0 : _plot$dataset_name.substring(1);\n  var path = plot.path;\n  var name = plot.name;\n  var new_plot = [run_number, dataset_name, path, encodeURI(name)].join('/');\n  return \"\".concat(plotsQuery ? plotsQuery + '&' : '').concat(new_plot);\n};\nvar addOverlayData = function addOverlayData(triples) {\n  var params = triples && triples.map(function (triple) {\n    return \"\".concat(triple.run_number).concat(triple.dataset_name, \"/\").concat(triple.label ? triple.label : triple.run_number);\n  });\n  var query = params === null || params === void 0 ? void 0 : params.join('&');\n  return query;\n};\nvar FormatParamsForAPI = function FormatParamsForAPI(globalState, query, plotName, path, zoomed) {\n  var cleaned_parameters = clean_deep__WEBPACK_IMPORTED_MODULE_1___default()({\n    run_number: query.run_number ? query.run_number : '',\n    dataset_name: query.dataset_name ? query.dataset_name : '',\n    folders_path: path,\n    plot_name: plotName,\n    height: zoomed ? globalState.rightSideSize.h : globalState.size.h,\n    width: zoomed ? globalState.rightSideSize.w : globalState.size.w,\n    customise: globalState.customise,\n    overlay: globalState.overlayPosition,\n    notOlderThan: globalState.updated_by_not_older_than ? globalState.updated_by_not_older_than : '',\n    overlay_plot: query.overlay_data ? Object(_viewDetailsMenu_utils__WEBPACK_IMPORTED_MODULE_2__[\"formTriples\"])(query.overlay_data) : [],\n    normalize: globalState.normalize,\n    stats: globalState.stats,\n    error: globalState.error,\n    lumi: globalState.lumisection\n  });\n  return cleaned_parameters;\n};\n_c = FormatParamsForAPI;\nvar addPlotToRightSide = function addPlotToRightSide(query, plot) {\n  return Object(_containers_display_utils__WEBPACK_IMPORTED_MODULE_3__[\"changeRouter\"])(Object(_containers_display_utils__WEBPACK_IMPORTED_MODULE_3__[\"getChangedQueryParams\"])({\n    selected_plots: \"\".concat(addToSelectedPlots(query.selected_plots, plot))\n  }, query));\n};\nvar removePlotFromRightSide = function removePlotFromRightSide(query, plot) {\n  Object(_containers_display_utils__WEBPACK_IMPORTED_MODULE_3__[\"changeRouter\"])(Object(_containers_display_utils__WEBPACK_IMPORTED_MODULE_3__[\"getChangedQueryParams\"])({\n    selected_plots: \"\".concat(removePlotFromSelectedPlots(query.selected_plots, plot))\n  }, query));\n};\nvar scroll = function scroll(imageRef) {\n  if (imageRef) {\n    imageRef.current.scrollIntoView({\n      behavior: 'smooth',\n      block: 'center',\n      inline: 'center'\n    });\n  }\n};\nvar scrollToBottom = function scrollToBottom(imageRef) {\n  if (imageRef && imageRef.current) {\n    imageRef.current.scrollTop = imageRef.current.scrollHeight;\n  }\n};\nvar shrink_or_expand = function shrink_or_expand(name, layouts_sections) {\n  var copy = Object(_Users_ernestapetraityte_projects_CERN_dqmgui_frontend_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(layouts_sections);\n\n  if (layouts_sections.includes(name)) {\n    var filtered_names = copy.filter(function (name_form_names) {\n      return name !== name_form_names;\n    });\n    return filtered_names;\n  } else {\n    copy.push(name);\n    return copy;\n  }\n};\nvar get_plot_error = function get_plot_error(plot) {\n  var found = false;\n\n  if (_config_config__WEBPACK_IMPORTED_MODULE_4__[\"functions_config\"].new_back_end.new_back_end) {\n    return plot.qteststatuses && plot.qteststatuses.find(function (status) {\n      return status === 300;\n    }) ? true : false;\n  }\n\n  plot.qteststatuses && plot.qteststatuses.forEach(function (qtest) {\n    if (qtest.hasOwnProperty('status')) {\n      var status = qtest.status;\n\n      if (status === 300) {\n        found = true;\n        return true;\n      }\n    }\n  });\n\n  if (!found) {\n    return found;\n  }\n\n  return found;\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FormatParamsForAPI\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../node_modules/next/dist/compiled/webpack/harmony-module.js */ \"./node_modules/next/dist/compiled/webpack/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/plots/plot/singlePlot/utils.ts\n");

/***/ })

})